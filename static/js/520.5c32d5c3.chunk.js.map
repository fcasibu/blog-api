{"version":3,"file":"static/js/520.5c32d5c3.chunk.js","mappings":"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","sources":["hooks/useDB.ts","hooks/usePagination.ts","webpack://client/./src/components/Hero/Hero.module.css?07ff","components/Hero/Hero.tsx","webpack://client/./src/components/Posts/Posts.module.css?b837","components/Posts/Item.tsx","components/Posts/Posts.tsx","hooks/useModal.ts","pages/Home/Home.tsx"],"sourcesContent":["import * as React from 'react';\nimport { DBContext } from '../context/DBProvider';\n\nexport default function useDB() {\n  const context = React.useContext(DBContext);\n\n  if (!context) throw new Error('useDB can only be used inside a DBProvider');\n\n  return context;\n}\n","import * as React from 'react';\n\ninterface ILoadMore {\n  cb: any;\n  postId?: string;\n  tag?: string;\n}\n\nexport default function usePagination() {\n  const [pageCount, setPageCount] = React.useState(2);\n\n  const loadMoreHandler = React.useCallback(\n    ({ cb, postId, tag }: ILoadMore) => {\n      if (tag) {\n        cb(pageCount, tag as string);\n      } else if (postId) {\n        cb(pageCount, postId as string);\n      } else {\n        cb(pageCount);\n      }\n      setPageCount(pageCount + 1);\n    },\n    [pageCount]\n  );\n\n  return { loadMoreHandler, pageCount, setPageCount };\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"hero\":\"Hero_hero__zvVCj\",\"image-container\":\"Hero_image-container__vG8Jk\",\"post-image\":\"Hero_post-image__MEXMJ\",\"image-title\":\"Hero_image-title__cY+De\",\"new-post\":\"Hero_new-post__DF+Hm\"};","import * as React from 'react';\nimport { Link } from 'react-router-dom';\nimport { IPost } from '../../context/DBProvider';\nimport s from './Hero.module.css';\n\ninterface HeroProps {\n  newPosts: IPost[];\n  scrollToPosts: () => void;\n}\n\nconst isPostOverFiveDays = (post: IPost) => {\n  return (\n    new Date(post.createdAt) <\n    new Date(new Date().getTime() + 5 * 24 * 60 * 60 * 1000)\n  );\n};\n\nfunction Hero({ newPosts, scrollToPosts }: HeroProps) {\n  return (\n    <div className={s.hero}>\n      <h1>Read engaging blog posts while you brew</h1>\n      <p>\n        Multiple fantastic authors. Filled with posts that satisfies your daily\n        reading needs\n      </p>\n      <button type=\"button\" onClick={scrollToPosts}>\n        Check Them Out\n      </button>\n      <div className={s['image-container']}>\n        {newPosts.map((post) => (\n          <Link\n            to={`/posts/${post._id}`}\n            key={post._id}\n            className={s['post-image']}\n          >\n            <img src={post.image} alt=\"\" />\n            <div className={s['image-title']}>\n              <p>{post.title}</p>\n            </div>\n            {isPostOverFiveDays(post) && (\n              <span className={s['new-post']}>New</span>\n            )}\n          </Link>\n        ))}\n      </div>\n    </div>\n  );\n}\n\nexport default React.memo(Hero);\n","// extracted by mini-css-extract-plugin\nexport default {\"posts-section\":\"Posts_posts-section__i8CjT\",\"section-title\":\"Posts_section-title__pldE5\",\"post\":\"Posts_post__X6pyF\",\"image-container\":\"Posts_image-container__zX-fu\",\"post-info\":\"Posts_post-info__WMci+\",\"post-info__header\":\"Posts_post-info__header__keuGq\",\"post-info__body\":\"Posts_post-info__body__hn8+Z\",\"post-info__footer\":\"Posts_post-info__footer__D7CJ-\",\"load-more\":\"Posts_load-more__lppm5\",\"drop-down-container\":\"Posts_drop-down-container__U5AXx\",\"drop-down\":\"Posts_drop-down__ssPAd\",\"drop-down__body\":\"Posts_drop-down__body__agPdq\",\"drop-down--left\":\"Posts_drop-down--left__DQWfj\",\"drop-down--right\":\"Posts_drop-down--right__xEC-b\",\"drop-down__divider\":\"Posts_drop-down__divider__+AKLL\",\"drop-down__beak\":\"Posts_drop-down__beak__y7HIs\",\"drop-down__beak--right\":\"Posts_drop-down__beak--right__MDOjx\"};","import { Link } from 'react-router-dom';\nimport parse from 'html-react-parser';\nimport { IPost } from '../../context/DBProvider';\nimport s from './Posts.module.css';\n\ninterface ItemProps {\n  postDetails: IPost;\n}\n\nexport default function Item({ postDetails }: ItemProps) {\n  return (\n    <div className={s.post}>\n      <div className={s['image-container']}>\n        <img src={postDetails.image} alt=\"\" />\n      </div>\n      <div className={s['post-info']}>\n        <div className={s['post-info__header']}>\n          <div>\n            <span>{postDetails.tag}</span>\n            <span>{postDetails.formattedDate}</span>\n          </div>\n          <span>{postDetails.author.username}</span>\n        </div>\n        <div className={s['post-info__body']}>\n          <h3>{postDetails.title}</h3>\n          <div>{parse(postDetails.body.slice(0, 200))}</div>\n        </div>\n        <div className={s['post-info__footer']}>\n          <Link to={`/posts/${postDetails._id}`}>Read More &rarr;</Link>\n          <div>\n            <span style={{fontSize: '1.2rem'}}>{postDetails.commentCount} Comments</span>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport { IPost, ITags } from '../../context/DBProvider';\nimport useModal from '../../hooks/useModal';\nimport Item from './Item';\nimport s from './Posts.module.css';\nimport usePagination from '../../hooks/usePagination';\n\ninterface PostsProps {\n  data: IPost[];\n  tags: ITags[];\n  getFilteredPosts: (tag: string) => Promise<void>;\n  getAllPost: () => Promise<void>;\n  loadPost: (page: number, tag?: string) => Promise<void>;\n}\n\nconst Posts = React.forwardRef<HTMLHeadingElement, PostsProps>((props, ref) => {\n  const { data, tags, getFilteredPosts, getAllPost, loadPost } = props;\n  const { pageCount, loadMoreHandler, setPageCount } = usePagination();\n  const { isOpen, open, close } = useModal();\n  const modalRef = React.useRef<HTMLDivElement | null>(null);\n  const [parentRef] = useAutoAnimate<HTMLDivElement>();\n  const [currentTag, setCurrentTag] = React.useState('');\n\n  React.useEffect(() => {\n    function handleClickOutside(event: MouseEvent) {\n      if (\n        modalRef.current &&\n        !modalRef.current.contains(event.target as HTMLDivElement)\n      ) {\n        close();\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside);\n\n    return () => {\n      document.removeEventListener('mousedown', handleClickOutside);\n    };\n  }, [modalRef]);\n\n  const filterPosts = (e: React.MouseEvent) => {\n    const { value } = e.target as HTMLButtonElement;\n    if (value === currentTag) return;\n    setCurrentTag(value);\n\n    getFilteredPosts(value);\n    setPageCount(2);\n  };\n\n  const filterAll = () => {\n    if (!currentTag) return;\n    setCurrentTag('');\n    getAllPost();\n    setPageCount(2);\n  };\n\n  return (\n    <div ref={parentRef} className={s['posts-section']}>\n      <h3 ref={ref} className={s['section-title']}>\n        Posts\n      </h3>\n      <div className={s['drop-down-container']}>\n        <button type=\"button\" onClick={filterAll}>\n          All\n        </button>\n        <button type=\"button\" onClick={open}>\n          Filter by Tags\n        </button>\n        {isOpen && (\n          <div\n            className={[s['drop-down'], s['drop-down--right']].join(' ')}\n            ref={modalRef}\n          >\n            <div className={s['drop-down__beak']} />\n            <div className={s['drop-down__divider']}>Tags</div>\n            <div className={s['drop-down__body']}>\n              {tags.map((el) => (\n                <button\n                  key={el.tag}\n                  type=\"button\"\n                  value={el.tag}\n                  onClick={filterPosts}\n                >\n                  {el.tag}\n                </button>\n              ))}\n            </div>\n          </div>\n        )}\n      </div>\n      {!data.length && <div style={{textAlign: 'center', fontSize: '3rem'}}>No Post</div>}\n      {data.map((el: IPost) => (\n        <Item postDetails={el} key={el._id} />\n      ))}\n      {data.length && data.length % (10 * (pageCount - 1)) === 0 ? (\n        <button\n          className={s['load-more']}\n          type=\"button\"\n          onClick={() => loadMoreHandler({ cb: loadPost, tag: currentTag })}\n        >\n          Load more\n        </button>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n});\n\nexport default Posts;\n","import * as React from 'react';\n\nexport default function useModal() {\n  const [isOpen, setIsOpen] = React.useState(false);\n\n  const open = React.useCallback(() => setIsOpen(true), []);\n  const close = React.useCallback(() => setIsOpen(false), []);\n\n  return { isOpen, open, close };\n}\n","import * as React from 'react';\nimport Hero from '../../components/Hero';\nimport Posts from '../../components/Posts';\nimport useDB from '../../hooks/useDB';\n\nexport default function Home() {\n  const { documents, getFilteredPosts, getAllPost, loadPost } = useDB();\n  const postsRef = React.useRef<HTMLHeadingElement | null>(null);\n\n  const scrollToPosts = () => {\n    if (postsRef.current) {\n      postsRef.current.scrollIntoView({\n        behavior: 'smooth'\n      });\n    }\n  };\n\n  return (\n    <>\n      <Hero newPosts={documents.newPosts} scrollToPosts={scrollToPosts} />\n      <Posts\n        data={documents.posts}\n        tags={documents.tags}\n        getFilteredPosts={getFilteredPosts}\n        getAllPost={getAllPost}\n        loadPost={loadPost}\n        ref={postsRef}\n      />\n    </>\n  );\n}\n"],"names":["useDB","context","React","DBContext","Error","usePagination","pageCount","setPageCount","loadMoreHandler","cb","postId","tag","isPostOverFiveDays","post","Date","createdAt","getTime","Hero","newPosts","scrollToPosts","className","s","type","onClick","map","to","_id","src","image","alt","title","Item","postDetails","formattedDate","author","username","parse","body","slice","style","fontSize","commentCount","props","ref","data","tags","getFilteredPosts","getAllPost","loadPost","isOpen","setIsOpen","open","close","useModal","modalRef","useAutoAnimate","parentRef","currentTag","setCurrentTag","handleClickOutside","event","current","contains","target","document","addEventListener","removeEventListener","filterPosts","e","value","join","el","length","textAlign","Home","documents","postsRef","scrollIntoView","behavior","posts"],"sourceRoot":""}