{"version":3,"file":"static/js/716.eaf8be9f.chunk.js","mappings":"6SAQMA,EAAe,CACnBC,SAAU,GACVC,MAAO,GACPC,SAAU,GACVC,gBAAiB,IAGJ,SAASC,IACtB,IAAQC,EAAWC,EAAAA,WAAiBC,EAAAA,GAA5BF,OACFG,GAAWC,EAAAA,EAAAA,MACjB,EAAkCH,EAAAA,UAAe,GAAjD,eAAOI,EAAP,KAAkBC,EAAlB,KACA,GACEC,EAAAA,EAAAA,GAAQb,GADFc,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,cAAeC,EAAnC,EAAmCA,OAAQC,EAA3C,EAA2CA,UAGrCC,EAAa,yCAAG,WAAOC,GAAP,mFACpBA,EAAEC,iBAEFR,GAAa,GAHO,SAIGN,EAAOQ,GAJV,UAIdO,EAJc,OAKpBT,GAAa,IAETS,EAASC,KAAKN,OAPE,yCAOaC,EAAUI,EAASC,KAAKN,SAPrC,OASpBP,EAAS,WATW,2CAAH,sDAYnB,OACE,iBAAKc,UAAWC,EAAAA,EAAAA,OAAhB,WACE,gEACA,4BACE,gBAAKD,UAAWC,EAAAA,EAAAA,mBAAhB,UACE,gBAAKC,IAAKC,EAAOC,IAAI,QAEvB,UAACC,EAAA,GAAD,CAAMC,SAAUX,EAAeP,UAAWA,EAA1C,WACE,SAACiB,EAAA,GAAD,CAAaE,GAAG,WAAWC,MAAM,WAAWf,OAAQA,EAApD,UACE,SAAC,KAAD,CACEgB,KAAK,OACLF,GAAG,WACHG,KAAK,WACLC,MAAOpB,EAAWb,SAClBkC,SAAUpB,OAGd,SAACa,EAAA,GAAD,CAAaE,GAAG,QAAQC,MAAM,gBAAgBf,OAAQA,EAAtD,UACE,SAAC,KAAD,CACEgB,KAAK,QACLF,GAAG,QACHG,KAAK,QACLC,MAAOpB,EAAWZ,MAClBiC,SAAUpB,OAGd,SAACa,EAAA,GAAD,CAAaE,GAAG,WAAWC,MAAM,WAAWf,OAAQA,EAApD,UACE,SAAC,KAAD,CACEgB,KAAK,WACLF,GAAG,WACHG,KAAK,WACLC,MAAOpB,EAAWX,SAClBgC,SAAUpB,OAGd,SAACa,EAAA,GAAD,CACEE,GAAG,kBACHC,MAAM,mBACNf,OAAQA,EAHV,UAKE,SAAC,KAAD,CACEgB,KAAK,WACLF,GAAG,kBACHG,KAAK,kBACLC,MAAOpB,EAAWV,gBAClB+B,SAAUpB,cAOvB,C","sources":["pages/Auth/SignUp.tsx"],"sourcesContent":["import * as React from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport Form, { FormControl, Input } from '../../components/Form';\nimport { AuthContext } from '../../context/AuthProvider';\nimport useForm from '../../hooks/useForm';\nimport image from '../../assets/sign-up.png';\nimport s from './Auth.module.css';\n\nconst initialState = {\n  username: '',\n  email: '',\n  password: '',\n  passwordConfirm: ''\n};\n\nexport default function SignUp() {\n  const { signUp } = React.useContext(AuthContext);\n  const navigate = useNavigate();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { formValues, changeHandler, errors, setErrors } =\n    useForm(initialState);\n\n  const submitHandler = async (e: React.FormEvent) => {\n    e.preventDefault();\n\n    setIsLoading(true);\n    const response = await signUp(formValues);\n    setIsLoading(false);\n\n    if (response.data.errors) return setErrors(response.data.errors);\n\n    navigate('/signin');\n  };\n\n  return (\n    <div className={s.signup}>\n      <h2>Sign Up to gain access to features</h2>\n      <div>\n        <div className={s['image-container']}>\n          <img src={image} alt=\"\" />\n        </div>\n        <Form onSubmit={submitHandler} isLoading={isLoading}>\n          <FormControl id=\"username\" label=\"Username\" errors={errors}>\n            <Input\n              type=\"text\"\n              id=\"username\"\n              name=\"username\"\n              value={formValues.username}\n              onChange={changeHandler}\n            />\n          </FormControl>\n          <FormControl id=\"email\" label=\"Email Address\" errors={errors}>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formValues.email}\n              onChange={changeHandler}\n            />\n          </FormControl>\n          <FormControl id=\"password\" label=\"Password\" errors={errors}>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formValues.password}\n              onChange={changeHandler}\n            />\n          </FormControl>\n          <FormControl\n            id=\"passwordConfirm\"\n            label=\"Confirm Password\"\n            errors={errors}\n          >\n            <Input\n              type=\"password\"\n              id=\"passwordConfirm\"\n              name=\"passwordConfirm\"\n              value={formValues.passwordConfirm}\n              onChange={changeHandler}\n            />\n          </FormControl>\n        </Form>\n      </div>\n    </div>\n  );\n}\n"],"names":["initialState","username","email","password","passwordConfirm","SignUp","signUp","React","AuthContext","navigate","useNavigate","isLoading","setIsLoading","useForm","formValues","changeHandler","errors","setErrors","submitHandler","e","preventDefault","response","data","className","s","src","image","alt","Form","onSubmit","id","label","type","name","value","onChange"],"sourceRoot":""}