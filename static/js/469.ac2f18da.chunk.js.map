{"version":3,"file":"static/js/469.ac2f18da.chunk.js","mappings":"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","sources":["components/Form/TextArea.tsx","webpack://client/./src/components/Form/Form.module.css?89ba","components/Form/Form.tsx","components/Form/Input.tsx","components/Form/FormControl.tsx","components/PostDetailComment/Comment.tsx","components/PostDetailComment/CommentList.tsx","webpack://client/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.tsx","hooks/useCMS.ts","hooks/useDB.ts","hooks/useForm.ts","components/PostDetailComment/PostDetailComment.tsx","webpack://client/./src/pages/PostDetail/PostDetail.module.css?b938","pages/PostDetail/PostBody.tsx","pages/PostDetail/PostHeader.tsx","pages/PostDetail/PostDetail.tsx","utils/handleAuthError.ts","webpack://client/./src/components/PostDetailComment/PostDetailComment.module.css?c9c9"],"sourcesContent":["import * as React from 'react';\n\ninterface TextAreaProps {\n  id: string;\n  name: string;\n  value: string;\n  onChange(e: React.FormEvent): void;\n}\n\nexport function TextArea({ id, name, value, onChange }: TextAreaProps) {\n  return (\n    <textarea id={id} name={name} value={value} onChange={onChange} />\n  )\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label-text\":\"Form_label-text__-KdfF\",\"error-message\":\"Form_error-message__pIAv9\"};","import React from 'react';\nimport Spinner from '../Spinner';\nimport s from './Form.module.css';\n\ninterface FormProps {\n  children: React.ReactNode;\n  onSubmit(e: React.FormEvent): void;\n  isLoading: boolean;\n  customButtons?: boolean;\n}\n\nexport default function Form({\n  children,\n  onSubmit,\n  isLoading,\n  customButtons\n}: FormProps) {\n  return (\n    <form onSubmit={onSubmit} className={s.form}>\n      {children}\n      {!customButtons && (\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner /> : 'Submit'}\n        </button>\n      )}\n    </form>\n  );\n}\n","import React from 'react';\n\ninterface InputProps {\n  type: string;\n  id: string;\n  name: string;\n  value?: string;\n  onChange(e: React.ChangeEvent<HTMLInputElement>): void;\n  required?: boolean;\n}\n\nexport function Input({\n  type,\n  id,\n  name,\n  value,\n  onChange,\n  required\n}: InputProps) {\n  return (\n    <input\n      type={type}\n      id={id}\n      name={name}\n      value={value}\n      onChange={onChange}\n      required={required}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport s from './Form.module.css';\n\nexport interface IErrors {\n  param: string;\n  msg: string;\n}\n\ninterface FormControlProps {\n  children: React.ReactNode;\n  id: string;\n  label: string;\n  errors: IErrors[] | [];\n}\n\n\nexport function FormControl({ children, id, label, errors = [] }: FormControlProps) {\n  const [labelRef] = useAutoAnimate<HTMLLabelElement>();\n  const message = errors.find((el) => el.param === id)?.msg;\n\n  return (\n    <label htmlFor={id} ref={labelRef}>\n      <p className={s['label-text']}>{label}</p>\n      {children}\n      {message && <p className={s[\"error-message\"]}>{message}</p>}\n    </label>\n  );\n}\n","import React from 'react';\nimport { IComment } from '../../context/DBProvider';\nimport useCMS from '../../hooks/useCMS';\nimport s from './PostDetailComment.module.css';\n\nexport interface CommentProps {\n  comment: IComment;\n  isAuthor?: boolean;\n  postId?: string;\n}\n\nexport const Comment = React.memo(\n  ({ comment, isAuthor, postId }: CommentProps) => {\n    const { deleteComment } = useCMS();\n\n    const deleteHandler = async () => {\n      await deleteComment(postId as string, comment._id as string);\n    };\n\n    return (\n      <div className={s['comment-box']}>\n        <div className={s['comment-box__header']}>\n          <h4>{comment.user.username}</h4>\n          <span>{comment.formattedDate}</span>\n        </div>\n        <p>{comment.text}</p>\n        {isAuthor && (\n          <div>\n            <button type=\"button\" onClick={deleteHandler} className={s['delete-button']}>\n              Delete\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import * as React from 'react';\nimport { IComment } from '../../context/DBProvider';\nimport { Comment } from './Comment';\n\ninterface CommentListProps {\n  comments: IComment[];\n  isAuthor?: boolean;\n  postId?: string;\n}\n\nexport const CommentList = React.memo(\n  ({ comments, isAuthor, postId }: CommentListProps) => (\n    <>\n      {comments.map((comment: IComment) => (\n        <Comment key={comment._id} comment={comment} isAuthor={isAuthor} postId={postId}/>\n      ))}\n    </>\n  )\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Spinner_spinner__Z6H3Z\",\"spin\":\"Spinner_spin__Q9zsz\"};","import s from './Spinner.module.css';\n\nexport default function Spinner() {\n  return <div className={s.spinner}>\n    <div />\n  </div>\n}\n","import * as React from 'react';\nimport { CMSContext } from '../context/CMSProvider';\n\nexport default function useCMS() {\n  const context = React.useContext(CMSContext);\n\n  if (!context) throw new Error('useCMS can only be used inside a CMSProvider');\n\n  return context;\n}\n","import * as React from 'react';\nimport { DBContext } from '../context/DBProvider';\n\nexport default function useDB() {\n  const context = React.useContext(DBContext);\n\n  if (!context) throw new Error('useDB can only be used inside a DBProvider');\n\n  return context;\n}\n","import * as React from 'react';\nimport { IErrors } from '../components/Form';\n\nexport default function useForm<T>(initialValue: T) {\n  const [formValues, setFormValues] = React.useState(initialValue);\n  const [errors, setErrors] = React.useState<IErrors[] | []>([]);\n\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, files } = e.target;\n\n    setFormValues((prevState) => ({\n      ...prevState,\n      [name]: name === 'image' ? files?.[0] : value\n    }));\n  };\n\n  return { formValues, errors, changeHandler, setErrors, setFormValues };\n}\n","import * as React from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport { AxiosError } from 'axios';\nimport { IComment } from '../../context/DBProvider';\nimport useForm from '../../hooks/useForm';\nimport handleAuthError from '../../utils/handleAuthError';\nimport Form, { FormControl } from '../Form';\nimport { TextArea } from '../Form/TextArea';\nimport { CommentList } from './CommentList';\nimport useAuth from '../../hooks/useAuth';\nimport s from './PostDetailComment.module.css';\n\ninterface PostDetailCommentProps {\n  comments: IComment[];\n  postId: string;\n  loadComments: (page: number, postId: string) => Promise<void>;\n  getPost: (postId: string) => Promise<void>;\n  createComment: (body: string, postId: string) => Promise<any>;\n}\n\nconst initialValues = {\n  text: ''\n};\n\n// Refactor duplicates\nexport default function PostDetailComment(props: PostDetailCommentProps) {\n  const { comments, postId, createComment, getPost, loadComments } = props;\n  const { user } = useAuth();\n  const { formValues, changeHandler, errors, setErrors } =\n    useForm(initialValues);\n  const [isLoading, setIsLoading] = React.useState(false);\n  const [pageCount, setPageCount] = React.useState(2);\n  const [parentRef] = useAutoAnimate<HTMLDivElement>();\n\n  const submitHandler = async (e: React.FormEvent) => {\n    try {\n      e.preventDefault();\n      setIsLoading(true);\n      const response = await createComment(formValues.text, postId);\n      setIsLoading(false);\n      if (response.data.errors) return setErrors(response.data.errors);\n\n      await getPost(postId);\n      setPageCount(2);\n      setErrors([]);\n    } catch (err) {\n      setErrors(handleAuthError(err as AxiosError));\n    }\n  };\n\n  const loadMoreHandler = () => {\n    loadComments(pageCount, postId);\n    setPageCount(pageCount + 1);\n  };\n\n  return (\n    <div ref={parentRef}>\n      <h4>Comments</h4>\n      {user ? (\n        <Form onSubmit={submitHandler} isLoading={isLoading}>\n          <FormControl id=\"text\" label=\"Write a Comment\" errors={errors}>\n            <TextArea\n              name=\"text\"\n              id=\"text\"\n              value={formValues.text}\n              onChange={changeHandler}\n            />\n          </FormControl>\n        </Form>\n      ) : (\n        <div>You must be logged in to post a comment!</div>\n      )}\n      <CommentList comments={comments} />\n      {comments.length && comments.length % (10 * (pageCount - 1)) === 0 ? (\n        <button\n          className={s['load-more']}\n          type=\"button\"\n          onClick={loadMoreHandler}\n        >\n          Load more\n        </button>\n      ) : ''}\n    </div>\n  );\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"header__top\":\"PostDetail_header__top__nse8w\",\"header\":\"PostDetail_header__OznDF\",\"image-container\":\"PostDetail_image-container__7xZDF\",\"post-body\":\"PostDetail_post-body__iyCYU\"};","import parse from 'html-react-parser';\nimport s from './PostDetail.module.css';\n\ninterface PostBodyProps {\n  body: string;\n}\n\nexport default function PostBody({ body }: PostBodyProps) {\n  return (\n    <div className={s['post-body']}>\n      <div>{parse(body)}</div>\n    </div>\n  );\n}\n","import s from './PostDetail.module.css';\n\ninterface PostHeaderProps {\n  author: string;\n  tag: string;\n  date: string;\n  title: string;\n  image: string;\n}\n\nexport default function PostHeader({\n  author,\n  tag,\n  date,\n  title,\n  image\n}: PostHeaderProps) {\n  return (\n    <div className={s.header}>\n      <div className={s.header__top}>\n        <span>{tag}</span>\n        <span>{date}</span>\n        <span>{author}</span>\n      </div>\n      <h1>{title}</h1>\n      <div className={s['image-container']}>\n        <img src={image} alt=\"\" />\n      </div>\n    </div>\n  );\n}\n","import * as React from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport { useParams } from 'react-router-dom';\nimport PostDetailComment from '../../components/PostDetailComment';\nimport useDB from '../../hooks/useDB';\nimport PostBody from './PostBody';\nimport PostHeader from './PostHeader';\n\nexport default function PostDetail() {\n  const { postId } = useParams();\n  const {\n    documents: { post },\n    getPost,\n    loadComments,\n    createComment\n  } = useDB();\n  const [parentRef] = useAutoAnimate<HTMLDivElement>();\n\n  React.useEffect(() => {\n    getPost(postId as string);\n  }, []);\n\n  return (\n    <div ref={parentRef}>\n      {post && (\n        <>\n          <PostHeader\n            author={post.author.username}\n            tag={post.tag}\n            date={post.formattedDate}\n            title={post.title}\n            image={post.image}\n          />\n          <PostBody body={post.body} />\n          <PostDetailComment\n            comments={post.comments}\n            getPost={getPost}\n            loadComments={loadComments}\n            createComment={createComment}\n            postId={postId as string}\n          />\n        </>\n      )}\n    </div>\n  );\n}\n","import { AxiosError, AxiosResponse } from 'axios';\n\nconst ErrMessages = {\n  NO_USER: 'User does not exist',\n  INVALID_PASSWORD: 'Invalid Password'\n};\n\nexport default function handleAuthError(err: AxiosError) {\n  const response = err.response as AxiosResponse;\n  switch (response.data.message) {\n    case ErrMessages.NO_USER:\n      return [{ param: 'email', msg: ErrMessages.NO_USER }];\n    case ErrMessages.INVALID_PASSWORD:\n      return [{ param: 'password', msg: ErrMessages.INVALID_PASSWORD }];\n    default:\n      return [];\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"comment-box\":\"PostDetailComment_comment-box__1Qm4a\",\"comment-box__header\":\"PostDetailComment_comment-box__header__yTINb\",\"load-more\":\"PostDetailComment_load-more__sI0bC\",\"delete-button\":\"PostDetailComment_delete-button__zVgF3\"};"],"names":["TextArea","id","name","value","onChange","Form","children","onSubmit","isLoading","customButtons","className","s","type","disabled","Spinner","Input","required","FormControl","label","errors","useAutoAnimate","labelRef","message","find","el","param","msg","htmlFor","ref","Comment","React","comment","isAuthor","postId","deleteComment","useCMS","deleteHandler","_id","user","username","formattedDate","text","onClick","CommentList","comments","map","context","CMSContext","Error","useDB","DBContext","useForm","initialValue","formValues","setFormValues","changeHandler","e","target","files","prevState","setErrors","initialValues","PostDetailComment","props","createComment","getPost","loadComments","useAuth","setIsLoading","pageCount","setPageCount","parentRef","submitHandler","preventDefault","response","data","handleAuthError","length","PostBody","body","parse","PostHeader","author","tag","date","title","image","src","alt","PostDetail","useParams","post","documents","ErrMessages","err"],"sourceRoot":""}