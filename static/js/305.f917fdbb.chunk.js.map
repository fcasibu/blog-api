{"version":3,"file":"static/js/305.f917fdbb.chunk.js","mappings":"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","sources":["webpack://client/./src/components/CMSForm/CMSForm.module.css?eb52","components/CMSForm/CMSForm.tsx","components/Form/TextArea.tsx","webpack://client/./src/components/Form/Form.module.css?89ba","components/Form/Form.tsx","components/Form/Input.tsx","components/Form/FormControl.tsx","components/PostDetailComment/Comment.tsx","components/PostDetailComment/CommentList.tsx","webpack://client/./src/components/Spinner/Spinner.module.css?d43e","components/Spinner/Spinner.tsx","hooks/useCMS.ts","hooks/useForm.ts","hooks/usePagination.ts","pages/CMS/EditPost.tsx","utils/handleAuthError.ts","webpack://client/./src/components/PostDetailComment/PostDetailComment.module.css?c9c9","webpack://client/./src/pages/CMS/CMS.module.css?d49b"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"buttons\":\"CMSForm_buttons__s1gOo\"};","import { Editor } from '@tinymce/tinymce-react';\nimport React from 'react';\nimport { TINYMCE_KEY } from '../../config';\nimport Form, { FormControl, IErrors, Input } from '../Form';\nimport Spinner from '../Spinner';\nimport s from './CMSForm.module.css';\n\nconst init = {\n  height: 500,\n  menubar: false,\n  plugins: 'codesample',\n  toolbar:\n    'undo redo | formatselect | ' +\n    'bold italic | alignleft aligncenter ' +\n    'alignright alignjustify | bullist numlist outdent indent | ' +\n    'removeformat | codesample',\n  content_style:\n    'body { font-family:Helvetica,Arial,sans-serif; font-size:18px }'\n};\n\ninterface CMSFormProps {\n  formValues: { [key: string]: string };\n  submitHandler: (e: React.FormEvent) => void;\n  isLoading: boolean;\n  isRequired?: boolean;\n  errors: IErrors[];\n  changeHandler: (e: React.ChangeEvent<HTMLInputElement>) => void;\n  editorValue: string;\n  setEditorValue: React.Dispatch<React.SetStateAction<string>>;\n}\n\nexport default function CMSForm({\n  formValues,\n  submitHandler,\n  isLoading,\n  isRequired,\n  errors,\n  changeHandler,\n  editorValue,\n  setEditorValue\n}: CMSFormProps) {\n  return (\n    <Form customButtons onSubmit={submitHandler} isLoading={isLoading}>\n      <FormControl id=\"title\" label=\"Post Title\" errors={errors}>\n        <Input\n          type=\"text\"\n          name=\"title\"\n          id=\"title\"\n          value={formValues.title}\n          onChange={changeHandler}\n        />\n      </FormControl>\n      <FormControl id=\"tag\" label=\"Post Tag\" errors={errors}>\n        <Input\n          type=\"text\"\n          name=\"tag\"\n          id=\"tag\"\n          value={formValues.tag}\n          onChange={changeHandler}\n        />\n      </FormControl>\n      <FormControl id=\"image\" label=\"Post Image\" errors={errors}>\n        <Input\n          type=\"file\"\n          name=\"image\"\n          id=\"image\"\n          onChange={changeHandler}\n          required={isRequired}\n        />\n      </FormControl>\n      <FormControl id=\"body\" label=\"Post Body\" errors={errors}>\n        <Editor\n          apiKey={TINYMCE_KEY}\n          value={editorValue}\n          onEditorChange={setEditorValue}\n          init={init}\n          id=\"body\"\n        />\n      </FormControl>\n      <div className={s.buttons}>\n        <button type=\"submit\" name=\"draft\" value=\"false\" disabled={isLoading}>\n          {isLoading ? <Spinner /> : 'Save as Draft'}\n        </button>\n        <button type=\"submit\" name=\"publish\" value=\"true\" disabled={isLoading}>\n          {isLoading ? <Spinner /> : 'Publish Post'}\n        </button>\n      </div>\n    </Form>\n  );\n}\n","import * as React from 'react';\n\ninterface TextAreaProps {\n  id: string;\n  name: string;\n  value: string;\n  onChange(e: React.FormEvent): void;\n}\n\nexport function TextArea({ id, name, value, onChange }: TextAreaProps) {\n  return (\n    <textarea id={id} name={name} value={value} onChange={onChange} />\n  )\n}\n\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"Form_form__e1yzW\",\"label-text\":\"Form_label-text__-KdfF\",\"error-message\":\"Form_error-message__pIAv9\"};","import React from 'react';\nimport Spinner from '../Spinner';\nimport s from './Form.module.css';\n\ninterface FormProps {\n  children: React.ReactNode;\n  onSubmit(e: React.FormEvent): void;\n  isLoading: boolean;\n  customButtons?: boolean;\n}\n\nexport default function Form({\n  children,\n  onSubmit,\n  isLoading,\n  customButtons\n}: FormProps) {\n  return (\n    <form onSubmit={onSubmit} className={s.form}>\n      {children}\n      {!customButtons && (\n        <button type=\"submit\" disabled={isLoading}>\n          {isLoading ? <Spinner /> : 'Submit'}\n        </button>\n      )}\n    </form>\n  );\n}\n","import React from 'react';\n\ninterface InputProps {\n  type: string;\n  id: string;\n  name: string;\n  value?: string;\n  onChange(e: React.ChangeEvent<HTMLInputElement>): void;\n  required?: boolean;\n}\n\nexport function Input({\n  type,\n  id,\n  name,\n  value,\n  onChange,\n  required\n}: InputProps) {\n  return (\n    <input\n      type={type}\n      id={id}\n      name={name}\n      value={value}\n      onChange={onChange}\n      required={required}\n    />\n  );\n}\n","import * as React from 'react';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport s from './Form.module.css';\n\nexport interface IErrors {\n  param: string;\n  msg: string;\n}\n\ninterface FormControlProps {\n  children: React.ReactNode;\n  id: string;\n  label: string;\n  errors: IErrors[] | [];\n}\n\n\nexport function FormControl({ children, id, label, errors = [] }: FormControlProps) {\n  const [labelRef] = useAutoAnimate<HTMLLabelElement>();\n  const message = errors.find((el) => el.param === id)?.msg;\n\n  return (\n    <label htmlFor={id} ref={labelRef}>\n      <p className={s['label-text']}>{label}</p>\n      {children}\n      {message && <p className={s[\"error-message\"]}>{message}</p>}\n    </label>\n  );\n}\n","import React from 'react';\nimport { IComment } from '../../context/DBProvider';\nimport useCMS from '../../hooks/useCMS';\nimport s from './PostDetailComment.module.css';\n\nexport interface CommentProps {\n  comment: IComment;\n  isAuthor?: boolean;\n  postId?: string;\n}\n\nexport const Comment = React.memo(\n  ({ comment, isAuthor, postId }: CommentProps) => {\n    const { deleteComment } = useCMS();\n\n    const deleteHandler = async () => {\n      await deleteComment(postId as string, comment._id as string);\n    };\n\n    return (\n      <div className={s['comment-box']}>\n        <div className={s['comment-box__header']}>\n          <h4>{comment.user.username}</h4>\n          <span>{comment.formattedDate}</span>\n        </div>\n        <p>{comment.text}</p>\n        {isAuthor && (\n          <div>\n            <button type=\"button\" onClick={deleteHandler} className={s['delete-button']}>\n              Delete\n            </button>\n          </div>\n        )}\n      </div>\n    );\n  }\n);\n","import * as React from 'react';\nimport { IComment } from '../../context/DBProvider';\nimport { Comment } from './Comment';\n\ninterface CommentListProps {\n  comments: IComment[];\n  isAuthor?: boolean;\n  postId?: string;\n}\n\nexport const CommentList = React.memo(\n  ({ comments, isAuthor, postId }: CommentListProps) => (\n    <>\n      {comments.map((comment: IComment) => (\n        <Comment key={comment._id} comment={comment} isAuthor={isAuthor} postId={postId}/>\n      ))}\n    </>\n  )\n);\n","// extracted by mini-css-extract-plugin\nexport default {\"spinner\":\"Spinner_spinner__Z6H3Z\",\"spin\":\"Spinner_spin__Q9zsz\"};","import s from './Spinner.module.css';\n\nexport default function Spinner() {\n  return <div className={s.spinner}>\n    <div />\n  </div>\n}\n","import * as React from 'react';\nimport { CMSContext } from '../context/CMSProvider';\n\nexport default function useCMS() {\n  const context = React.useContext(CMSContext);\n\n  if (!context) throw new Error('useCMS can only be used inside a CMSProvider');\n\n  return context;\n}\n","import * as React from 'react';\nimport { IErrors } from '../components/Form';\n\nexport default function useForm<T>(initialValue: T) {\n  const [formValues, setFormValues] = React.useState(initialValue);\n  const [errors, setErrors] = React.useState<IErrors[] | []>([]);\n\n  const changeHandler = (e: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value, files } = e.target;\n\n    setFormValues((prevState) => ({\n      ...prevState,\n      [name]: name === 'image' ? files?.[0] : value\n    }));\n  };\n\n  return { formValues, errors, changeHandler, setErrors, setFormValues };\n}\n","import * as React from 'react';\n\ninterface ILoadMore {\n  cb: any;\n  postId?: string;\n  tag?: string;\n}\n\nexport default function usePagination() {\n  const [pageCount, setPageCount] = React.useState(2);\n\n  const loadMoreHandler = React.useCallback(\n    ({ cb, postId, tag }: ILoadMore) => {\n      if (tag) {\n        cb(pageCount, tag as string);\n      } else if (postId) {\n        cb(pageCount, postId as string);\n      } else {\n        cb(pageCount);\n      }\n      setPageCount(pageCount + 1);\n    },\n    [pageCount]\n  );\n\n  return { loadMoreHandler, pageCount, setPageCount };\n}\n","import * as React from 'react';\nimport { useNavigate, useParams } from 'react-router-dom';\nimport { AxiosError } from 'axios';\nimport { useAutoAnimate } from '@formkit/auto-animate/react';\nimport useForm from '../../hooks/useForm';\nimport useCMS from '../../hooks/useCMS';\nimport handleAuthError from '../../utils/handleAuthError';\nimport { CommentList } from '../../components/PostDetailComment/CommentList';\nimport CMSForm from '../../components/CMSForm';\nimport s from './CMS.module.css';\nimport usePagination from '../../hooks/usePagination';\n\nconst formInitialValues = {\n  title: '',\n  tag: '',\n  image: ''\n};\n\nexport default function EditPost() {\n  const {\n    documents: { post },\n    getPost,\n    editPost,\n    loadComments\n  } = useCMS();\n  const navigate = useNavigate();\n  const { postId } = useParams();\n  const { loadMoreHandler, pageCount } = usePagination();\n  const [commentRef] = useAutoAnimate<HTMLDivElement>();\n  const [editorValue, setEditorValue] = React.useState('');\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { formValues, setFormValues, changeHandler, errors, setErrors } =\n    useForm(formInitialValues);\n\n  const submitHandler = async (e: React.FormEvent) => {\n    try {\n      e.preventDefault();\n      const { submitter } = e.nativeEvent as SubmitEvent;\n      const { value } = submitter as HTMLButtonElement;\n      const data = new FormData();\n      data.append('body', editorValue);\n      data.append('title', formValues.title);\n      data.append('tag', formValues.tag);\n      data.append('published', value);\n      data.append('image', formValues.image);\n      setIsLoading(true);\n      const response = await editPost(data, postId as string);\n      setIsLoading(false);\n      if (response.data.errors) return setErrors(response.data.errors);\n\n      await getPost(postId as string);\n      navigate(`/cms`)\n    } catch (err) {\n      setErrors(handleAuthError(err as AxiosError));\n    }\n  };\n\n  React.useEffect(() => {\n    getPost(postId as string);\n  }, []);\n\n  React.useEffect(() => {\n    if (post) {\n      setEditorValue(post.body);\n      setFormValues({\n        title: post.title,\n        tag: post.tag,\n        image: ''\n      });\n    }\n  }, [post]);\n\n  return (\n    <div className={s['edit-post']}>\n      <CMSForm\n        formValues={formValues}\n        submitHandler={submitHandler}\n        changeHandler={changeHandler}\n        isLoading={isLoading}\n        errors={errors}\n        editorValue={editorValue}\n        setEditorValue={setEditorValue}\n      />\n      <div ref={commentRef}>\n        <h4>Comments</h4>\n        {post?.comments.length ? (\n          <CommentList comments={post.comments} isAuthor postId={postId} />\n        ) : (\n          <p>There are no comments on this blog post</p>\n        )}\n      </div>\n      {post?.comments.length &&\n      post.comments.length % (10 * (pageCount - 1)) === 0 ? (\n        <button\n          className={s['load-more']}\n          type=\"button\"\n          onClick={() => loadMoreHandler({ cb: loadComments, postId })}\n        >\n          Load more\n        </button>\n      ) : (\n        ''\n      )}\n    </div>\n  );\n}\n","import { AxiosError, AxiosResponse } from 'axios';\n\nconst ErrMessages = {\n  NO_USER: 'User does not exist',\n  INVALID_PASSWORD: 'Invalid Password'\n};\n\nexport default function handleAuthError(err: AxiosError) {\n  const response = err.response as AxiosResponse;\n  switch (response.data.message) {\n    case ErrMessages.NO_USER:\n      return [{ param: 'email', msg: ErrMessages.NO_USER }];\n    case ErrMessages.INVALID_PASSWORD:\n      return [{ param: 'password', msg: ErrMessages.INVALID_PASSWORD }];\n    default:\n      return [];\n  }\n}\n","// extracted by mini-css-extract-plugin\nexport default {\"comment-box\":\"PostDetailComment_comment-box__1Qm4a\",\"comment-box__header\":\"PostDetailComment_comment-box__header__yTINb\",\"load-more\":\"PostDetailComment_load-more__sI0bC\",\"delete-button\":\"PostDetailComment_delete-button__zVgF3\"};","// extracted by mini-css-extract-plugin\nexport default {\"cms\":\"CMS_cms__AqUK-\",\"card-list\":\"CMS_card-list__77+OO\",\"post-card\":\"CMS_post-card__Y2axW\",\"buttons\":\"CMS_buttons__u0fj-\",\"load-more\":\"CMS_load-more__D4jPz\"};"],"names":["init","height","menubar","plugins","toolbar","content_style","CMSForm","formValues","submitHandler","isLoading","isRequired","errors","changeHandler","editorValue","setEditorValue","Form","customButtons","onSubmit","id","label","type","name","value","title","onChange","tag","required","apiKey","TINYMCE_KEY","onEditorChange","className","s","disabled","Spinner","TextArea","children","Input","FormControl","useAutoAnimate","labelRef","message","find","el","param","msg","htmlFor","ref","Comment","React","comment","isAuthor","postId","deleteComment","useCMS","deleteHandler","_id","user","username","formattedDate","text","onClick","CommentList","comments","map","context","CMSContext","Error","useForm","initialValue","setFormValues","e","target","files","prevState","setErrors","usePagination","pageCount","setPageCount","loadMoreHandler","cb","formInitialValues","image","EditPost","post","documents","getPost","editPost","loadComments","navigate","useNavigate","useParams","commentRef","setIsLoading","preventDefault","nativeEvent","submitter","data","FormData","append","response","handleAuthError","body","length","ErrMessages","err"],"sourceRoot":""}