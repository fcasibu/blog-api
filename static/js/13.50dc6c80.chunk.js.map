{"version":3,"file":"static/js/13.50dc6c80.chunk.js","mappings":"uTAUMA,EAAe,CACnBC,MAAO,GACPC,SAAU,IAGG,SAASC,IACtB,IAAMC,GAAWC,EAAAA,EAAAA,MACjB,GAA+BC,EAAAA,EAAAA,KAAvBC,EAAR,EAAQA,OAAQC,EAAhB,EAAgBA,WAChB,EAAkCC,EAAAA,UAAe,GAAjD,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GACEC,EAAAA,EAAAA,GAAQZ,GADFa,EAAR,EAAQA,WAAYC,EAApB,EAAoBA,OAAQC,EAA5B,EAA4BA,cAAeC,EAA3C,EAA2CA,UAGrCC,EAAa,yCAAG,WAAOC,GAAP,4FAElBA,EAAEC,iBAFgB,SAGKZ,EAAOM,EAAWZ,MAAOY,EAAWX,UAHzC,YAGZkB,EAHY,QAKLC,KAAKP,OALA,yCAKeE,EAAUI,EAASC,KAAKP,SALvC,cAOlBQ,aAAaC,QAAQ,QAASH,EAASC,KAAKG,OAC5Cb,GAAa,GARK,UASZH,IATY,QAUlBJ,EAAS,KAVS,kDAYlBY,GAAUS,EAAAA,EAAAA,GAAgB,EAAD,KAZP,0DAAH,sDAgBnB,OACE,iBAAKC,UAAWC,EAAAA,EAAAA,OAAhB,WACE,iEACA,4BACE,gBAAKD,UAAWC,EAAAA,EAAAA,mBAAhB,UACE,gBAAKC,IAAKC,EAAOC,IAAI,QAEvB,UAACC,EAAA,GAAD,CAAMC,SAAUf,EAAeP,UAAWA,EAA1C,WACE,SAACqB,EAAA,GAAD,CAAaE,GAAG,QAAQC,MAAM,gBAAgBpB,OAAQA,EAAtD,UACE,SAAC,KAAD,CACEqB,KAAK,QACLF,GAAG,QACHG,KAAK,QACLC,MAAOxB,EAAWZ,MAClBqC,SAAUvB,OAGd,SAACgB,EAAA,GAAD,CAAaE,GAAG,WAAWC,MAAM,WAAWpB,OAAQA,EAApD,UACE,SAAC,KAAD,CACEqB,KAAK,WACLF,GAAG,WACHG,KAAK,WACLC,MAAOxB,EAAWX,SAClBoC,SAAUvB,cAOvB,C,uDClED,IAAMwB,EACK,sBADLA,EAEc,mBAGL,SAASd,EAAgBe,GAEtC,OADiBA,EAAIpB,SACJC,KAAKoB,SACpB,KAAKF,EACH,MAAO,CAAC,CAAEG,MAAO,QAASC,IAAKJ,IACjC,KAAKA,EACH,MAAO,CAAC,CAAEG,MAAO,WAAYC,IAAKJ,IACpC,QACE,MAAO,GAEZ,C","sources":["pages/Auth/SignIn.tsx","utils/handleAuthError.ts"],"sourcesContent":["import * as React from 'react';\nimport { AxiosError } from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport Form, { FormControl, Input } from '../../components/Form';\nimport useForm from '../../hooks/useForm';\nimport image from '../../assets/sign-in.png';\nimport s from './Auth.module.css';\nimport handleAuthError from '../../utils/handleAuthError';\nimport useAuth from '../../hooks/useAuth';\n\nconst initialState = {\n  email: '',\n  password: ''\n};\n\nexport default function SignIn() {\n  const navigate = useNavigate();\n  const { signIn, verifyUser } = useAuth();\n  const [isLoading, setIsLoading] = React.useState(false);\n  const { formValues, errors, changeHandler, setErrors } =\n    useForm(initialState);\n\n  const submitHandler = async (e: React.FormEvent) => {\n    try {\n      e.preventDefault();\n      const response = await signIn(formValues.email, formValues.password);\n\n      if (response.data.errors) return setErrors(response.data.errors);\n\n      localStorage.setItem('token', response.data.token);\n      setIsLoading(true);\n      await verifyUser();\n      navigate('/');\n    } catch (err) {\n      setErrors(handleAuthError(err as AxiosError));\n    }\n  };\n\n  return (\n    <div className={s.signin}>\n      <h2>Sign In to gain access to features!</h2>\n      <div>\n        <div className={s['image-container']}>\n          <img src={image} alt=\"\" />\n        </div>\n        <Form onSubmit={submitHandler} isLoading={isLoading}>\n          <FormControl id=\"email\" label=\"Email Address\" errors={errors}>\n            <Input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formValues.email}\n              onChange={changeHandler}\n            />\n          </FormControl>\n          <FormControl id=\"password\" label=\"Password\" errors={errors}>\n            <Input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formValues.password}\n              onChange={changeHandler}\n            />\n          </FormControl>\n        </Form>\n      </div>\n    </div>\n  );\n}\n","import { AxiosError, AxiosResponse } from 'axios';\n\nconst ErrMessages = {\n  NO_USER: 'User does not exist',\n  INVALID_PASSWORD: 'Invalid Password'\n};\n\nexport default function handleAuthError(err: AxiosError) {\n  const response = err.response as AxiosResponse;\n  switch (response.data.message) {\n    case ErrMessages.NO_USER:\n      return [{ param: 'email', msg: ErrMessages.NO_USER }];\n    case ErrMessages.INVALID_PASSWORD:\n      return [{ param: 'password', msg: ErrMessages.INVALID_PASSWORD }];\n    default:\n      return [];\n  }\n}\n"],"names":["initialState","email","password","SignIn","navigate","useNavigate","useAuth","signIn","verifyUser","React","isLoading","setIsLoading","useForm","formValues","errors","changeHandler","setErrors","submitHandler","e","preventDefault","response","data","localStorage","setItem","token","handleAuthError","className","s","src","image","alt","Form","onSubmit","id","label","type","name","value","onChange","ErrMessages","err","message","param","msg"],"sourceRoot":""}